{
  "info": {
    "name": "RingCentral Engage Digital API",
    "description": "This is a collection of APIs for RingCentral Engage Digital.\n\nPlease use a Postman environment with the following variables: ENGAGE_DIGITAL_SERVER_URL and ENGAGE_DIGITAL_ACCESS_TOKEN. ENGAGE_DIGITAL_SERVER_URL should use the following format: https://{account}.api.engagement.dimelo.com where '{account}' is replaced with your literal URL value. Your access token should resemble the following: bxtetcyuf8twydx2pubk77dh.",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Events \u0026 Notifications",
      "item": [
        {
          "name": "Events",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all events",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/events",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "events"
                  ],
                  "query": [
                    {
                      "key": "q",
                      "value": "\u003cstring\u003e",
                      "description": "To filter events on given query. Query works exactly like threads query but only have those keywords: content, content_thread, name_in, created_before, created_after, user. Order can be created_at.desc (default) or created_at.asc. e.g. q=name_in:\"content.replied\"%20content_thread:\"7f946431b6eebffafae642cc\"%20created_after:\"2014-03-20\"%20user:\"4ee91f197aa58d01b500000f\"%20order:\"created_at.asc\"\n* DateTime parameters should be ISO-8601\n* you can specify multiple value for a given keyword: q=name_in:’content.replied’\u0026name_in:’content.ignored’\nPlease refer to ​Search \u0026 filtering parameters​ for more details.",
                      "disabled": true
                    },
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders events ordered by creation date (descending).\n\nAuthorization​: Only users whose role can search event permission."
              }
            },
            {
              "name": "Getting an event from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/events/:eventId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "events",
                    ":eventId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders an event from given id. If token’s user role does not have “search event” permission a 404 HTTP response will be returned.\n\nAuthorization​: Only users who’s role can search event permission."
              }
            }
          ]
        },
        {
          "name": "Webhooks",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all webhooks",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/webhooks",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "webhooks"
                  ],
                  "query": [
                    {
                      "key": "access_token",
                      "value": "\u003cstring\u003e",
                      "description": "Access token.",
                      "disabled": true
                    },
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders webhooks ordered by active and staging_use (descending).\n\nAuthorization​: users having manage_api_access_tokens permission can see all webhooks / users don’t having the manage_api_access_tokens permission can see only the webhooks belonging to access token created by them."
              }
            },
            {
              "name": "Creating a webhook",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/webhooks",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "webhooks"
                  ],
                  "query": [
                    {
                      "key": "access_token",
                      "value": "\u003cstring\u003e",
                      "description": "Access token.",
                      "disabled": true
                    },
                    {
                      "key": "active",
                      "value": "\u003cboolean\u003e",
                      "description": "true or false, this field is used to enable/disable a webhook.",
                      "disabled": true
                    },
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "The name of the webhook.",
                      "disabled": true
                    },
                    {
                      "key": "staging_use",
                      "value": "\u003cboolean\u003e",
                      "description": "true or false, this field is used to determine if a webhook will be run in staging",
                      "disabled": true
                    },
                    {
                      "key": "url",
                      "value": "\u003cstring\u003e",
                      "description": "The url of a webhook. This is used to determine the endpoint of your webhook, where",
                      "disabled": true
                    },
                    {
                      "key": "verify_token",
                      "value": "\u003cstring\u003e",
                      "description": "The token used in your webhook.",
                      "disabled": true
                    },
                    {
                      "key": "secret",
                      "value": "\u003cstring\u003e",
                      "description": "The secret key that will be served as a ​`X-Dimelo-Secret​` header in every request.",
                      "disabled": true
                    },
                    {
                      "key": "registered_events[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "An array containing all the events that your webhook wants to subscribe.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a webhook. In case of success it renders the webhook, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: All users having the manage_api_access_tokens permission or all users having an api access token."
              }
            },
            {
              "name": "Deleting a webhook",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/webhooks/:webhookId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "webhooks",
                    ":webhookId"
                  ],
                  "query": [
                    {
                      "key": "access_token",
                      "value": "\u003cstring\u003e",
                      "description": "Access token.",
                      "disabled": true
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing webhook. It renders webhook itself. It renders a 404 if id is invalid.\n\nAuthorization​: All users having the manage_api_access_tokens permission or all users having an api access token belonging to the webhook you’re deleting."
              }
            },
            {
              "name": "Getting a webhook from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/webhooks/:webhookId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "webhooks",
                    ":webhookId"
                  ],
                  "query": [
                    {
                      "key": "access_token",
                      "value": "\u003cstring\u003e",
                      "description": "Access token.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a webhook from given id.\n\nAuthorization​: users having manage_api_access_tokens permission can see any webhook / users don’t having the `manage_api_access_tokens` permission can see only the webhook in case the webhook is associated to an access token created by them."
              }
            },
            {
              "name": "Updating a webhook",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/webhooks/:webhookId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "webhooks",
                    ":webhookId"
                  ],
                  "query": [
                    {
                      "key": "access_token",
                      "value": "\u003cstring\u003e",
                      "description": "Access token.",
                      "disabled": true
                    },
                    {
                      "key": "active",
                      "value": "\u003cboolean\u003e",
                      "description": "true or false, this field is used to enable/disable a webhook.",
                      "disabled": true
                    },
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "The name of the webhook.",
                      "disabled": true
                    },
                    {
                      "key": "staging_use",
                      "value": "\u003cboolean\u003e",
                      "description": "true or false, this field is used to determine if a webhook will be run in staging",
                      "disabled": true
                    },
                    {
                      "key": "url",
                      "value": "\u003cstring\u003e",
                      "description": "The url of a webhook. This is used to determine the endpoint of your webhook, where",
                      "disabled": true
                    },
                    {
                      "key": "verify_token",
                      "value": "\u003cstring\u003e",
                      "description": "The token used in your webhook.",
                      "disabled": true
                    },
                    {
                      "key": "secret",
                      "value": "\u003cstring\u003e",
                      "description": "The secret key that will be served as a ​`X-Dimelo-Secret​` header in every request.",
                      "disabled": true
                    },
                    {
                      "key": "registered_events[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "An array containing all the events that your webhook wants to subscribe.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing webhook from given attributes and renders it in case of success.\n\nAuthorization​: All users having the manage_api_access_tokens permission or all users having an api access token belonging to the webhook you’re updating."
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Interactions",
      "item": [
        {
          "name": "Attachments",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all attachments",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/attachments",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "attachments"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    },
                    {
                      "key": "extension",
                      "value": "\u003cstring\u003e",
                      "description": "Search parameter for file extension (e.g. pdf, xlsx, jpg...)",
                      "disabled": true
                    },
                    {
                      "key": "created_before",
                      "value": "\u003cstring\u003e",
                      "description": "Search parameter to get attachments created before a ISO 8601 datetime (inclusive)",
                      "disabled": true
                    },
                    {
                      "key": "created_after",
                      "value": "\u003cstring\u003e",
                      "description": "Search parameter to get attachments created after a ISO 8601 datetime (inclusive)",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders attachments ordered by creation date (descending)."
              }
            },
            {
              "name": "Creating an attachment",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/attachments",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "attachments"
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method allows you to create an new attachment."
              }
            },
            {
              "name": "Getting an attachment from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/attachments/:attachmentId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "attachments",
                    ":attachmentId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders an attachment from given id."
              }
            }
          ]
        },
        {
          "name": "Bots",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Bot complete",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/bots/complete",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "bots",
                    "complete"
                  ],
                  "query": [
                    {
                      "key": "intervention_id",
                      "value": "\u003cstring\u003e",
                      "description": "The intervention_id of the intervention that you want to complete.",
                      "disabled": true
                    },
                    {
                      "key": "close_thread",
                      "value": "\u003cboolean\u003e",
                      "description": "Wether if the thread should be closed at the same time.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method is used to complete an intervention from a bot (closing the intervention and completing the task). In case of success it renders 200, otherwise, it renders an error (422 HTTP code)."
              }
            },
            {
              "name": "Bot engage",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/bots/engage",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "bots",
                    "engage"
                  ],
                  "query": [
                    {
                      "key": "content_id",
                      "value": "\u003cstring\u003e",
                      "description": "The content_id of the content for which you want to engage the bot.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method is used to engage a thread from a bot. In case of success it renders the intervention, otherwise, it renders an error (422 HTTP code). This method opens intervention as the virtual agent user."
              }
            },
            {
              "name": "Bot handover",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/bots/handover",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "bots",
                    "handover"
                  ],
                  "query": [
                    {
                      "key": "from",
                      "value": "\u003cstring\u003e",
                      "description": "Who we are taking the conversation control from (either bot or agent).",
                      "disabled": true
                    },
                    {
                      "key": "to",
                      "value": "\u003cstring\u003e",
                      "description": "Who we are giving the convesation control to (either bot or agent).",
                      "disabled": true
                    },
                    {
                      "key": "type",
                      "value": "\u003cstring\u003e",
                      "description": "The type of handover (either type of channel or engage_virtual_agent).",
                      "disabled": true
                    },
                    {
                      "key": "identity_foreign_id",
                      "value": "\u003cstring\u003e",
                      "description": "The foreign_id of the identity for which you want to do the handover (only for source specific handover).",
                      "disabled": true
                    },
                    {
                      "key": "app_id",
                      "value": "\u003cstring\u003e",
                      "description": "The id of the Facebook's app that controls the Bot (only for source specific handover).",
                      "disabled": true
                    },
                    {
                      "key": "intervention_id",
                      "value": "\u003cstring\u003e",
                      "description": "The id of the intervention that we want to handover (only for Engage Virtual Agent handover).",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method is used to handover a conversation between a bot and an agent. It handles 2 different cases, specific sources handover (Messenger for example, see Bots API doc) and handover between Engage Virtual Agents and human agents"
              }
            }
          ]
        },
        {
          "name": "Communities",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all communities",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/communities",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "communities"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders communities ordered by creation date (ascending)."
              }
            },
            {
              "name": "Getting a community from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/communities/:communityId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "communities",
                    ":communityId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a community from given id."
              }
            }
          ]
        },
        {
          "name": "Contents",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Contents",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/contents",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "contents"
                  ],
                  "query": [
                    {
                      "key": "q",
                      "value": "\u003cstring\u003e",
                      "description": "To filter contents on given query. Query works exactly like threads query but only have those keywords: intervention,identity, identity_group, source, status_in, thread or text. Order can be created_at.desc (default) or created_at.asc. e.g. q=intervention:\"7f946431b6eebffafae642cc\"%20source:\"d19c81948c137d86dac77216\" Please refer to ​Search \u0026 filtering parameters​ for more details.",
                      "disabled": true
                    },
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders contents ordered by creation date (descending). Only contents in sources where token’s user has “read” permission are returned.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Creating content",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/contents",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "contents"
                  ],
                  "query": [
                    {
                      "key": "author_id",
                      "value": "\u003cstring\u003e",
                      "description": "The identity id of content. This parameter is not mandatory, by default it use the token’s user first identity on source.",
                      "disabled": true
                    },
                    {
                      "key": "body",
                      "value": "\u003cstring\u003e",
                      "description": "The content’s body. This parameter is mandatory.",
                      "disabled": true
                    },
                    {
                      "key": "in_reply_to_id",
                      "value": "\u003cstring\u003e",
                      "description": "The content’s id you want to reply to. If omitted, a new discussion will be created. If source does not support to initiate discussion this parameter is mandatory.",
                      "disabled": true
                    },
                    {
                      "key": "private",
                      "value": "\u003cboolean\u003e",
                      "description": "Created contents are public by default, set this parameter to \"true\" in order to create a private reply. It is NOT supported on every source.",
                      "disabled": true
                    },
                    {
                      "key": "source_id",
                      "value": "\u003cstring\u003e",
                      "description": "The source to create content to. If you specify `in_reply_to_id` parameter, source will be determined from it. Otherwise, this parameter is mandatory.",
                      "disabled": true
                    },
                    {
                      "key": "attachment_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "An array containing the attachments’ ids that need to be attached to this content.",
                      "disabled": true
                    },
                    {
                      "key": "auto_submitted",
                      "value": "\u003cboolean\u003e",
                      "description": "Marks the message as automatically sent.",
                      "disabled": true
                    },
                    {
                      "key": "title",
                      "value": "\u003cstring\u003e",
                      "description": "For an email source. The subject of the email. This parameter is mandatory when initiating a discussion.",
                      "disabled": true
                    },
                    {
                      "key": "to",
                      "value": "\u003cstring\u003e",
                      "description": "For a SMS, WhatsApp, or Engage Messaging source. For a WhatsApp message or a SMS, the number the message will be sent to. It must start with 00 or +, example: +33634231224 or 0033634231224. This parameter is mandatory when initiating a discussion. For an Engage Messaging content, the foreign_id of the identity to send the message to. The oubound messaging option must be enabled. This parameter is mandatory when initiating a discussion and forbidden when replying to an existing message.",
                      "disabled": true
                    },
                    {
                      "key": "to[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "For an email source. An array containing the email addresses used in the “To” section of the email. This parameter is mandatory when initiating a discussion.",
                      "disabled": true
                    },
                    {
                      "key": "cc[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "For an email source. An array containing the email addresses used in the “Cc” section of the email.",
                      "disabled": true
                    },
                    {
                      "key": "bcc[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "For an email source. An array containing the email addresses used in the “Bcc” section of the email.",
                      "disabled": true
                    },
                    {
                      "key": "template_name",
                      "value": "\u003cstring\u003e",
                      "description": "Mandatory for a WhatsApp source. A discussion can only be initiated using a specific template created on the business manager and approved by WhatsApp. You can find all available template_names on /1.0/content_sources/source_id.",
                      "disabled": true
                    },
                    {
                      "key": "template_language",
                      "value": "\u003cstring\u003e",
                      "description": "Mandatory for a WhatsApp source. A discussion can only be initiated using a specific template created on the business manager and approved by WhatsApp. You can find all available template_languages for a given template_name on /1.0/content_sources/source_id.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method allows you to create new content for use in discussions. It can be a reply to another piece of content or be used to initiate discussion. If authorized, the token’s user will be used as the content author. Content will be created in Engage Digital and pushed asynchronously to the source.\nReplying to a customer content is usually possible (unless the source/conversation is read only).\nComposing a content on the contrary depend on the source itself:\n* The source may not support it (and be purely reactive like Instagram, Messenger ...)\n* Some sources (usually public account) like Twitter or Facebook page allows to publish content without targeting specific individuals.\n* Some sources (usually non public media) require specific targeting (phone number for SMS, email address for email, customer_id ...) to be able to create a content. This is source specific and detailed under the generic parameters.\n\nAuthorization​: only users that can reply or initiate discussion (= compose) on given source. it renders also an error if in_reply_to isn’t synchronized or if in_reply_to content is not under an ​open intervention."
              }
            },
            {
              "name": "Getting a content from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/contents/:contentId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "contents",
                    ":contentId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a content from given id. If token’s user does not have “read” on content’s source a 404 HTTP response will be returned.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Ignoring a content",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/contents/:contentId/ignore",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "contents",
                    ":contentId",
                    "ignore"
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "Ignores a content. If token’s user does not have “read” on content’s source a 404 HTTP response will be returned.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Categorizing a content",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/contents/:contentId/update_categories",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "contents",
                    ":contentId",
                    "update_categories"
                  ],
                  "query": [
                    {
                      "key": "category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "An array containing the new categories to set on the content.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates the categories of a content. If token’s user does not have “read” on this content’s source a 404 HTTP response will be returned.\n\nAuthorization​: no."
              }
            }
          ]
        },
        {
          "name": "Identities",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all identities",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/identities",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "identities"
                  ],
                  "query": [
                    {
                      "key": "community_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter identities on given community id.",
                      "disabled": true
                    },
                    {
                      "key": "source_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter identities on given source's community. Not used if community_id is provided.",
                      "disabled": true
                    },
                    {
                      "key": "identity_group_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter on given group id.",
                      "disabled": true
                    },
                    {
                      "key": "user_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter identities on given user id.",
                      "disabled": true
                    },
                    {
                      "key": "sort",
                      "value": "\u003cstring\u003e",
                      "description": "To change the criteria chosen to sort the identities. The value can be “created_at” or",
                      "disabled": true
                    },
                    {
                      "key": "foreign_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter identities on given user id",
                      "disabled": true
                    },
                    {
                      "key": "uuid",
                      "value": "\u003cstring\u003e",
                      "description": "To filter identities on given uuid",
                      "disabled": true
                    },
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders identities ordered by creation date (descending). Only identities in sources where token’s user has “read” permission are returned."
              }
            },
            {
              "name": "Importing an identity",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/identities/import",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "identities",
                    "import"
                  ],
                  "query": [
                    {
                      "key": "community_id",
                      "value": "\u003cstring\u003e",
                      "description": "The community of the identity. Optional if source_id is provided.",
                      "disabled": true
                    },
                    {
                      "key": "source_id",
                      "value": "\u003cstring\u003e",
                      "description": "The source of the identity. Not used if community_id is provided.",
                      "disabled": true
                    },
                    {
                      "key": "identifier",
                      "value": "\u003cstring\u003e",
                      "description": "The identifier representing the identity on the community (email address for emails communities, phone number with international format for phone communities).",
                      "disabled": true
                    },
                    {
                      "key": "upsert",
                      "value": "\u003cboolean\u003e",
                      "description": "If present and an identity with the provided identifier is already existing, it'll be updated. Otherwise, the following parameters will be used only during an identity creation.",
                      "disabled": true
                    },
                    {
                      "key": "company",
                      "value": "\u003cstring\u003e",
                      "description": "Identity company.",
                      "disabled": true
                    },
                    {
                      "key": "firstname",
                      "value": "\u003cstring\u003e",
                      "description": "Identity firstname.",
                      "disabled": true
                    },
                    {
                      "key": "gender",
                      "value": "\u003cstring\u003e",
                      "description": "Identity’s gender. It can be \"man\", \"woman\" or empty.",
                      "disabled": true
                    },
                    {
                      "key": "home_phone",
                      "value": "\u003cstring\u003e",
                      "description": "Identity home phone.",
                      "disabled": true
                    },
                    {
                      "key": "lastname",
                      "value": "\u003cstring\u003e",
                      "description": "Identity lastname.",
                      "disabled": true
                    },
                    {
                      "key": "mobile_phone",
                      "value": "\u003cstring\u003e",
                      "description": "Identity mobile phone.",
                      "disabled": true
                    },
                    {
                      "key": "screenname",
                      "value": "\u003cstring\u003e",
                      "description": "Identity screenname.",
                      "disabled": true
                    },
                    {
                      "key": "extra_values[extra_value_key]",
                      "value": "\u003cstring\u003e",
                      "description": "Identity extra_values with key « extra_value ».",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method imports an identity. The identity created or matching the identifier criteria will be returned. Identity import is only available for the following communities: Email, Phone. Emails identities import the following fields: company, firstname, gender, home_phone, lastname, mobile_phone, screenname, extra_values[extra_value_key] Phone identities only import the following fields: company, firstname, gender, lastname, extra_values[extra_value_key]. screenname and mobile_phone are automatically set to the identifier parameter sanitized value. identifier value must be an international phone number, it will be sanitized so \"+336.23.45.67.89\" will be stored as \"33623456789\"."
              }
            },
            {
              "name": "Getting an identity from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/identities/:identityId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "identities",
                    ":identityId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders an identity from given id. If token’s user does not have “read” on identity’s source community a 404 HTTP response will be returned."
              }
            }
          ]
        },
        {
          "name": "Identity Groups",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all identity groups",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/identity_groups",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "identity_groups"
                  ],
                  "query": [
                    {
                      "key": "firstname",
                      "value": "\u003cstring\u003e",
                      "description": "To filter groups on given firstname.",
                      "disabled": true
                    },
                    {
                      "key": "lastname",
                      "value": "\u003cstring\u003e",
                      "description": "To filter groups on given lastname.",
                      "disabled": true
                    },
                    {
                      "key": "email",
                      "value": "\u003cstring\u003e",
                      "description": "To filter groups that have given email.",
                      "disabled": true
                    },
                    {
                      "key": "uuid",
                      "value": "\u003cstring\u003e",
                      "description": "To filter groups that have given uuid.",
                      "disabled": true
                    },
                    {
                      "key": "sort",
                      "value": "\u003cstring\u003e",
                      "description": "To change the criteria chosen to sort the identities. The value can be “created_at” or “updated_at”.",
                      "disabled": true
                    },
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders identity groups ordered by creation date (descending). Note that identity_group are created in a lazily only when data are manually added to an identity OR a two identity are merged altogether. That means that some identity DON’T have identity_group, and identity_group do not cover all identities.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Getting an identity group from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/identity_groups/:identityGroupId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "identity_groups",
                    ":identityGroupId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders an identity group from given id."
              }
            },
            {
              "name": "Updating an identity group",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/identity_groups/:identityGroupId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "identity_groups",
                    ":identityGroupId"
                  ],
                  "query": [
                    {
                      "key": "company",
                      "value": "\u003cstring\u003e",
                      "description": "Identity company.",
                      "disabled": true
                    },
                    {
                      "key": "custom_field_values[custom_field_key]",
                      "value": "\u003cstring\u003e",
                      "description": "Identity custom field with key « custom_field_key ». It",
                      "disabled": true
                    },
                    {
                      "key": "emails[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Identity emails (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "firstname",
                      "value": "\u003cstring\u003e",
                      "description": "Identity firstname.",
                      "disabled": true
                    },
                    {
                      "key": "gender",
                      "value": "\u003cstring\u003e",
                      "description": "Identity’s gender. It can be \"man\", \"woman\" or empty.",
                      "disabled": true
                    },
                    {
                      "key": "home_phones[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Identity home phones (mutiple).",
                      "disabled": true
                    },
                    {
                      "key": "lastname",
                      "value": "\u003cstring\u003e",
                      "description": "Identity lastname.",
                      "disabled": true
                    },
                    {
                      "key": "mobile_phones[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Identity mobile phones (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "notes",
                      "value": "\u003cstring\u003e",
                      "description": "Identity notes.",
                      "disabled": true
                    },
                    {
                      "key": "tag_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Identity tag ids (multiple).",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an identity group from given attributes and renders it in case of success.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Merging an identity into an identity group",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/identity_groups/:identityGroupId/merge",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "identity_groups",
                    ":identityGroupId",
                    "merge"
                  ],
                  "query": [
                    {
                      "key": "associated_identity_id",
                      "value": "\u003cstring\u003e",
                      "description": "The identity which will be merged into the identity group.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method merges an identity into an identity group. In case of conflicts, the attributes of the identity group will be kept. The identity group will be returned.\nAuthorization​: only users which can update identities."
              }
            }
          ]
        },
        {
          "name": "Intervention Comments",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all intervention comments",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/intervention_comments",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "intervention_comments"
                  ],
                  "query": [
                    {
                      "key": "intervention_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter comments on given intervention id.",
                      "disabled": true
                    },
                    {
                      "key": "thread_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter comments on given thread id.",
                      "disabled": true
                    },
                    {
                      "key": "user_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter comments on given user id.",
                      "disabled": true
                    },
                    {
                      "key": "identity_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter comments on given identity id.",
                      "disabled": true
                    },
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders interventions comments ordered by creation date (descending). Only comments in sources where token’s user has “read” permission are returned.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Creating an intervention comment",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/intervention_comments",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "intervention_comments"
                  ],
                  "query": [
                    {
                      "key": "body",
                      "value": "\u003cstring\u003e",
                      "description": "The comment body (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "intervention_id",
                      "value": "\u003cstring\u003e",
                      "description": "The comment intervention id (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "user_id",
                      "value": "\u003cstring\u003e",
                      "description": "The comment user id (mandatory).",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a new intervention comment. In case of success it renders the created comment, otherwise, it renders an error (422 HTTP code). It creates comment as token’s user. If token’s user does not have “read” on given intervention’s source a 404 HTTP response will be returned."
              }
            },
            {
              "name": "Deleting an intervention comment",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/intervention_comments/:interventionCommentId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "intervention_comments",
                    ":interventionCommentId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an intervention comment. It renders comment itself. If token’s user does not have “read” on comment’s source a 404 HTTP response will be returned.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Getting an intervention comment from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/intervention_comments/:interventionCommentId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "intervention_comments",
                    ":interventionCommentId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders an intervention comment from given id. If token’s user does not have “read” on comment’s source a 404 HTTP response will be returned."
              }
            }
          ]
        },
        {
          "name": "Interventions",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all interventions",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/interventions",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "interventions"
                  ],
                  "query": [
                    {
                      "key": "thread_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter interventions on given thread id.",
                      "disabled": true
                    },
                    {
                      "key": "user_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter interventions on given user id.",
                      "disabled": true
                    },
                    {
                      "key": "identity_group_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter interventions on given identity_group_id. This will return interventions associated to any identity in the indentity_group.",
                      "disabled": true
                    },
                    {
                      "key": "identity_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter interventions on given identity_id(s). Can be a single value or an array of string.",
                      "disabled": true
                    },
                    {
                      "key": "sort",
                      "value": "\u003cstring\u003e",
                      "description": "To change the criteria chosen to sort the interventions. The value can be “created_at” or “updated_at”.",
                      "disabled": true
                    },
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders interventions ordered by creation date (descending). Only interventions in sources where token’s user has “read” permission are returned.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Creating an intervention",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/interventions",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "interventions"
                  ],
                  "query": [
                    {
                      "key": "content_id",
                      "value": "\u003cstring\u003e",
                      "description": "The content to create intervention on (mandatory).",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a new intervention or reopen it. In case of success it renders the intervention, otherwise, it renders an error (422 HTTP code). This method opens intervention as access token’s user.\n\nAuthorization​: no, but it renders an error if intervention can’t be created or reopened (already opened, etc.)."
              }
            },
            {
              "name": "Getting an intervention from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/interventions/:interventionId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "interventions",
                    ":interventionId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders an intervention from given id. If token’s user does not have “read” on intervention’s source a 404 HTTP response will be returned.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Updating an intervention from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/interventions/:interventionId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "interventions",
                    ":interventionId"
                  ],
                  "query": [
                    {
                      "key": "custom_field_values[custom_field_key]",
                      "value": "\u003cstring\u003e",
                      "description": "Intervention custom field with key \"custom_field_key\". It can be multiple if custom field is multiple or is has multiple_choice type.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates intervention from given attributes and renders it in case of success.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Cancelling an intervention",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/interventions/:interventionId/cancel",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "interventions",
                    ":interventionId",
                    "cancel"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method cancels (destroys) an intervention. It renders intervention itself. If token’s user does not have “read” on intervention’s source a 404 HTTP response will be returned.\n\nCaveats:\n\n* If the intervention is already being canceled, it will return a 409 error.\n* To be able to close an intervention, it must meet the following criteria otherwise a 403 will be raised:\n  * Intervention MUST NOT already be closed\n * Intervention MUST NOT have agent replies\n  * Access-Token agent MUST have read access on the source\n\nAuthorization​: no, but it renders an error if intervention can’t be destroyed (see caveats)."
              }
            },
            {
              "name": "Closing an intervention",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/interventions/:interventionId/close",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "interventions",
                    ":interventionId",
                    "close"
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method closes an intervention. Caveats:\n\n* If the intervention is already being closed, it will return a 409 error.\n* To be able to close an intervention, it must meet the following criteria otherwise a 403 will be raised:\n\n  * Intervention MUST NOT already be closed\n\n  * Intervention MUST have agent replies\n  * Access-Token agent MUST be the owner of the intervention or have the permission to edit permissions\n\n  * Access-Token agent MUST have read access on the source\n\nAuthorization​: no, but it renders an error if intervention can’t be closed (see caveats)"
              }
            },
            {
              "name": "Reassigning an intervention",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/interventions/:interventionId/reassign",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "interventions",
                    ":interventionId",
                    "reassign"
                  ],
                  "query": [
                    {
                      "key": "user_id",
                      "value": "\u003cstring\u003e",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates the user in charge of the intervention\n\nAuthorization​: Only users who can update interventions."
              }
            },
            {
              "name": "Categorizing an intervention",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/interventions/:interventionId/update_categories",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "interventions",
                    ":interventionId",
                    "update_categories"
                  ],
                  "query": [
                    {
                      "key": "category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates the categories of an intervention. If token’s user does not have “read” on the intervention’s source a 404 HTTP response will be returned.\n\nAuthorization​: no."
              }
            }
          ]
        },
        {
          "name": "Sources",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all sources",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/content_sources",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "content_sources"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders sources ordered by creation date (ascending)."
              }
            },
            {
              "name": "Getting a source from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/content_sources/:sourceId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "content_sources",
                    ":sourceId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a source from given id."
              }
            },
            {
              "name": "Updating a source",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/content_sources/:sourceId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "content_sources",
                    ":sourceId"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "Source name",
                      "disabled": true
                    },
                    {
                      "key": "active",
                      "value": "\u003cboolean\u003e",
                      "description": "Activate/deactivate the source (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "channel_id",
                      "value": "\u003cstring\u003e",
                      "description": "Channel",
                      "disabled": true
                    },
                    {
                      "key": "color",
                      "value": "\u003cinteger\u003e",
                      "description": "Color of the icon (see Source colors) (Integer)",
                      "disabled": true
                    },
                    {
                      "key": "time_sheet_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Business Hours (Limited to 1)",
                      "disabled": true
                    },
                    {
                      "key": "sla_response",
                      "value": "\u003cinteger\u003e",
                      "description": "Response time (seconds)",
                      "disabled": true
                    },
                    {
                      "key": "sla_threshold",
                      "value": "\u003cinteger\u003e",
                      "description": "Customer SLA warning threshold (must be greater than 0 and less than 100, default value is 0).",
                      "disabled": true
                    },
                    {
                      "key": "sla_filtering_categories_strategy",
                      "value": "\u003cstring\u003e",
                      "description": "Categories filtering strategy for Customer SLA indicator",
                      "disabled": true
                    },
                    {
                      "key": "sla_filtering_category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Filtering categories for Customer SLA indicator",
                      "disabled": true
                    },
                    {
                      "key": "sla_expired_strategy",
                      "value": "\u003cstring\u003e",
                      "description": "SLA expired strategy (\"max\", \"half\" or \"base\")",
                      "disabled": true
                    },
                    {
                      "key": "attachments_security_level",
                      "value": "\u003cstring\u003e",
                      "description": "Attachments security level. (\"strict\", \"relaxed\", or \"permissive\"). Strict allows images and medias. Relaxed allows images, media and documents. Permissive allows all kind of attachments",
                      "disabled": true
                    },
                    {
                      "key": "intervention_messages_boost",
                      "value": "\u003cinteger\u003e",
                      "description": "Priority boost of messages with intervention (Integer)",
                      "disabled": true
                    },
                    {
                      "key": "transferred_tasks_boost",
                      "value": "\u003cinteger\u003e",
                      "description": "Priority boost of transferred tasks (Integer)",
                      "disabled": true
                    },
                    {
                      "key": "hidden_from_stats",
                      "value": "\u003cboolean\u003e",
                      "description": "Hide from statistics (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "default_category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Default categories",
                      "disabled": true
                    },
                    {
                      "key": "user_thread_default_category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Default categories (agent messages)",
                      "disabled": true
                    },
                    {
                      "key": "signatures",
                      "value": "\u003carray.object\u003e",
                      "description": "Signatures",
                      "disabled": true
                    },
                    {
                      "key": "auto_response_triggers",
                      "value": "\u003carray.object\u003e",
                      "description": "Automatic messages",
                      "disabled": true
                    },
                    {
                      "key": "auto_response_trigger_enabled[first_message_from_user]",
                      "value": "\u003cboolean\u003e",
                      "description": "Enable answers to first messages",
                      "disabled": true
                    },
                    {
                      "key": "auto_response_trigger_enabled[out_of_office_hours_message]",
                      "value": "\u003cboolean\u003e",
                      "description": "Enable answers to messages outside business hours",
                      "disabled": true
                    },
                    {
                      "key": "auto_response_trigger_grace_periods[first_message_from_user]",
                      "value": "\u003cinteger\u003e",
                      "description": "Time between two messages (First message)",
                      "disabled": true
                    },
                    {
                      "key": "auto_response_trigger_grace_periods[out_of_office_hours_message]",
                      "value": "\u003cinteger\u003e",
                      "description": "Time between two messages (Message outside business hours)",
                      "disabled": true
                    },
                    {
                      "key": "default_content_language",
                      "value": "\u003cstring\u003e",
                      "description": "Default content language",
                      "disabled": true
                    },
                    {
                      "key": "auto_detect_content_language",
                      "value": "\u003cboolean\u003e",
                      "description": "Auto-detect content language (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "content_languages",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Languages to detect",
                      "disabled": true
                    },
                    {
                      "key": "content_archiving",
                      "value": "\u003cboolean\u003e",
                      "description": "Automatic archiving of old contents (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "content_archiving_period",
                      "value": "\u003cinteger\u003e",
                      "description": "Archive contents older than (seconds)",
                      "disabled": true
                    },
                    {
                      "key": "from_name",
                      "value": "\u003cstring\u003e",
                      "description": "Custom sender name. Only on sources which supports a custom sender name.",
                      "disabled": true
                    },
                    {
                      "key": "default_task_priority",
                      "value": "\u003cinteger\u003e",
                      "description": "Default priority for interactions.",
                      "disabled": true
                    },
                    {
                      "key": "enable_android",
                      "value": "\u003cboolean\u003e",
                      "description": "Only on Engage Messaging sources that are not on livechat mode. Enable or disable the source on Android.",
                      "disabled": true
                    },
                    {
                      "key": "enable_ios",
                      "value": "\u003cboolean\u003e",
                      "description": "Only on Engage Messaging sources that are not on livechat mode. Enable or disable the source on iOS.",
                      "disabled": true
                    },
                    {
                      "key": "enable_web",
                      "value": "\u003cboolean\u003e",
                      "description": "Only on Engage Messaging sources that are not on livechat mode. Enable or disable the source on the web.",
                      "disabled": true
                    },
                    {
                      "key": "imap_smtp_email",
                      "value": "\u003cstring\u003e",
                      "description": "Email address to synchronize. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "imap_mailboxes_to_import",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Folders to synchronize. Does not accept empty array or blank values. Only on Email sources.",
                      "disabled": true
                    },
                    {
                      "key": "imap_mailbox_used_for_sent_mail",
                      "value": "\u003cstring\u003e",
                      "description": "Folder for 'Sent Mail'. Only on Email sources.",
                      "disabled": true
                    },
                    {
                      "key": "imap_address",
                      "value": "\u003cstring\u003e",
                      "description": "IMAP server address. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "imap_port",
                      "value": "\u003cinteger\u003e",
                      "description": "IMAP server port. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "imap_username",
                      "value": "\u003cstring\u003e",
                      "description": "IMAP username. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "imap_password",
                      "value": "\u003cstring\u003e",
                      "description": "IMAP password. Used when IMAP authentication type is `basic`. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "imap_oauth_refresh_token",
                      "value": "\u003cstring\u003e",
                      "description": "IMAP OAuth 2.0 refresh token. Used when IMAP authentication type is `microsoft_identity_platform`. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "imap_use_ssl_tls",
                      "value": "\u003cboolean\u003e",
                      "description": "Use SSL/TLS protocol to establish secure IMAP connection. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "imap_use_start_tls",
                      "value": "\u003cboolean\u003e",
                      "description": "Use STARTTLS protocol to establish secure IMAP connection. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "imap_authentication_type",
                      "value": "\u003cstring\u003e",
                      "description": "IMAP Authentication type (\"basic\" or \"microsoft_identity_platform\"). Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "imap_ssl_verify_mode",
                      "value": "\u003cstring\u003e",
                      "description": "IMAP SSL verification mode. (\"NONE\", \"PEER\", \"CLIENT_ONCE\" or \"FAIL_IF_NO_PEER_CERT\"). Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "smtp_address",
                      "value": "\u003cstring\u003e",
                      "description": "SMTP server address. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "smtp_port",
                      "value": "\u003cinteger\u003e",
                      "description": "SMTP server port. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "smtp_username",
                      "value": "\u003cstring\u003e",
                      "description": "SMTP username. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "smtp_password",
                      "value": "\u003cstring\u003e",
                      "description": "SMTP password. Used when SMTP authentication type is `basic`. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "smtp_oauth_refresh_token",
                      "value": "\u003cstring\u003e",
                      "description": "SMTP OAuth 2.0 refresh token. Used when SMTP authentication type is `microsoft_identity_platform`. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "smtp_use_ssl_tls",
                      "value": "\u003cboolean\u003e",
                      "description": "Use SSL/TLS protocol to establish secure SMTP connection. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "smtp_use_start_tls",
                      "value": "\u003cboolean\u003e",
                      "description": "Use STARTTLS protocol to establish secure IMAP connection. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "smtp_authentication_type",
                      "value": "\u003cstring\u003e",
                      "description": "SMTP Authentication type (\"basic\" or \"microsoft_identity_platform\"). Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "smtp_ssl_verify_mode",
                      "value": "\u003cstring\u003e",
                      "description": "SMTP SSL verification mode. (\"NONE\", \"PEER\", \"CLIENT_ONCE\" or \"FAIL_IF_NO_PEER_CERT\"). Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "smtp_helo_domain",
                      "value": "\u003cstring\u003e",
                      "description": "Used to identify HELO/EHLO when connecting to the SMTP server. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "threading_heuristics",
                      "value": "\u003cboolean\u003e",
                      "description": "Threading heuristics. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "common_ancestors_threading",
                      "value": "\u003cboolean\u003e",
                      "description": "Common ancestors threading. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "spam_assassin_level",
                      "value": "\u003cstring\u003e",
                      "description": "Spam threshold (\"disabled\", \"relaxed\", or \"strict\"). Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "whitelisted_emails",
                      "value": "\u003cstring\u003e",
                      "description": "Whitelisted emails. All emails received from this address won't be threaded and can be associated with an anonymous identity or the Reply-To, if there is one. To be filled when implementing a form. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "cc_blacklist",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Exclude from TO/CC. Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "email_parser",
                      "value": "\u003cboolean\u003e",
                      "description": "Email parser (BBCode). Only on Email sources",
                      "disabled": true
                    },
                    {
                      "key": "time_for_thread_inclusion",
                      "value": "\u003cinteger\u003e",
                      "description": "Time for thread inclusion.",
                      "disabled": true
                    },
                    {
                      "key": "time_for_thread_inclusion_enabled",
                      "value": "\u003cboolean\u003e",
                      "description": "Enable time for thread inclusion. Only on Email sources",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing source from given attributes and renders it in case of success."
              }
            },
            {
              "name": "Updating source credentials",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/content_sources/:sourceId/email_credentials",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "content_sources",
                    ":sourceId",
                    "email_credentials"
                  ],
                  "query": [
                    {
                      "key": "imap[username]",
                      "value": "\u003cstring\u003e",
                      "description": "IMAP username",
                      "disabled": true
                    },
                    {
                      "key": "imap[password]",
                      "value": "\u003cstring\u003e",
                      "description": "IMAP password",
                      "disabled": true
                    },
                    {
                      "key": "smtp[username]",
                      "value": "\u003cstring\u003e",
                      "description": "SMTP username",
                      "disabled": true
                    },
                    {
                      "key": "smtp[password]",
                      "value": "\u003cstring\u003e",
                      "description": "SMTP password",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates credentials for IMAP and SMTP adapters of email sources. In case of success it renders the content source, otherwise, it renders an error (422 HTTP code)."
              }
            }
          ]
        },
        {
          "name": "Survey Responses",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Get a survey response",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/survey_responses/:surveyResponseId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "survey_responses",
                    ":surveyResponseId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method returns information about a survey response."
              }
            }
          ]
        },
        {
          "name": "Surveys",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all surveys",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/surveys",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "surveys"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders all surveys ordered by creation date (ascending)."
              }
            },
            {
              "name": "Getting a survey from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/surveys/:surveyId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "surveys",
                    ":surveyId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a survey from given id."
              }
            }
          ]
        },
        {
          "name": "Threads",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all threads",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/content_threads",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "content_threads"
                  ],
                  "query": [
                    {
                      "key": "q",
                      "value": "\u003cstring\u003e",
                      "description": "A search query to filter threads. Please refer to ​Search \u0026 filtering parameters​ for more details.",
                      "disabled": true
                    },
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders threads ordered by last content date (descending). Only threads in sources where token’s user has “read” permission are returned.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Getting a thread from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/content_threads/:threadId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "content_threads",
                    ":threadId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a thread from given id. If token’s user does not have “read” on thread’s source a 404 HTTP response will be returned.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Close a thread",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/content_threads/:threadId/close",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "content_threads",
                    ":threadId",
                    "close"
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "Thread closure/opening is only available for the following sources:\n* Emails\n* Answers\n* Ideas\n* Facebook Messenger\n* Google+\n* Lithium\n* Mobile Messaging\n\nStarts a job to close a thread. It returns the thread but as the job is asynchronous, the state of the “close” attribute in the returned object do not is the one when the job started.\n\nIf token’s user does not have “read” on thread’s source a 404 HTTP response will be returned. Returns a 403 if the thread cannot be closed or if the user does not have the permission to close a thread.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Archiving a thread",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/content_threads/:threadId/ignore",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "content_threads",
                    ":threadId",
                    "ignore"
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "Archives the contents of a thread. If token’s user does not have “read” on thread’s source a 404 HTTP response will be returned.\n\nIf the thread is already being archived, a 409 HTTP response will be returned.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Open a thread",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/content_threads/:threadId/open",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "content_threads",
                    ":threadId",
                    "open"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "Thread closure/opening is only available for the following sources:\n\n* Emails\n* Answers\n* Ideas\n* Facebook Messenger\n* Google+\n* Lithium\n* Mobile Messaging\n\nStarts a job to open a thread. It returns the thread but as the job is asynchronous, the state of the “close” attribute in the returned object is the one when the job started.\n\nIf token’s user does not have “read” on thread’s source a 404 HTTP response will be returned. Returns a 403 if the thread cannot be opened or if the user does not have the permission to open a thread.\n\nAuthorization​: no."
              }
            },
            {
              "name": "Categorizing a thread",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/content_threads/:threadId/update_categories",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "content_threads",
                    ":threadId",
                    "update_categories"
                  ],
                  "query": [
                    {
                      "key": "thread_category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "An array containing the new categories to set on the thread.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates the categories of a thread. If token’s user does not have “read” on thread’s source a 404 HTTP response will be returned.\n\nIf the thread is already being categorized, a 409 HTTP response will be returned.\n\nAuthorization​: no."
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Provisioning",
      "item": [
        {
          "name": "Categories",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all categories",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/categories",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "categories"
                  ],
                  "query": [
                    {
                      "key": "parent_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter categories on given category parent id.",
                      "disabled": true
                    },
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders categories ordered by creation date (ascending)."
              }
            },
            {
              "name": "Creating a category",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/categories",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "categories"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "Category name.",
                      "disabled": true
                    },
                    {
                      "key": "parent_id",
                      "value": "\u003cstring\u003e",
                      "description": "ID of parent category.",
                      "disabled": true
                    },
                    {
                      "key": "color",
                      "value": "\u003cinteger\u003e",
                      "description": "displayed color for the category, see Category colors. ",
                      "disabled": true
                    },
                    {
                      "key": "mandatory",
                      "value": "\u003cboolean\u003e",
                      "description": "mandatory categorization (Boolean).",
                      "disabled": true
                    },
                    {
                      "key": "multiple",
                      "value": "\u003cboolean\u003e",
                      "description": "allow to assign multiple child categories (Boolean).",
                      "disabled": true
                    },
                    {
                      "key": "post_qualification",
                      "value": "\u003cboolean\u003e",
                      "description": "post qualification (Boolean).",
                      "disabled": true
                    },
                    {
                      "key": "unselectable",
                      "value": "\u003cboolean\u003e",
                      "description": "root category is unselectable (Boolean).",
                      "disabled": true
                    },
                    {
                      "key": "source_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "List of source id.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a new team. In case of success it renders the created tag, otherwise, it renders an error (422 HTTP code).\n\nNote: The fields ​`mandatory`,​ `​multiple`,​ ​`post_qualification​`, `s​ource_ids`​ and `u​nselectable​` are accounted for only if the Category has no parent.\n\nAuthorization​: only users that can manage teams."
              }
            },
            {
              "name": "Deleting a category",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/categories/:categoryId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "categories",
                    ":categoryId"
                  ],
                  "query": [
                    {
                      "key": "take_over_category_id",
                      "value": "\u003cstring\u003e",
                      "description": "ID of a category to recategorize (optional).",
                      "disabled": true
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing category. It renders the category itself. It renders a 404 if id is invalid."
              }
            },
            {
              "name": "Getting a category from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/categories/:categoryId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "categories",
                    ":categoryId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a category from given id."
              }
            },
            {
              "name": "Updating a category",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/categories/:categoryId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "categories",
                    ":categoryId"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "Category name.",
                      "disabled": true
                    },
                    {
                      "key": "parent_id",
                      "value": "\u003cstring\u003e",
                      "description": "ID of parent category.",
                      "disabled": true
                    },
                    {
                      "key": "color",
                      "value": "\u003cinteger\u003e",
                      "description": "displayed color for the category, see Category colors. ",
                      "disabled": true
                    },
                    {
                      "key": "mandatory",
                      "value": "\u003cboolean\u003e",
                      "description": "mandatory categorization (Boolean).",
                      "disabled": true
                    },
                    {
                      "key": "multiple",
                      "value": "\u003cboolean\u003e",
                      "description": "allow to assign multiple child categories (Boolean).",
                      "disabled": true
                    },
                    {
                      "key": "post_qualification",
                      "value": "\u003cboolean\u003e",
                      "description": "post qualification (Boolean).",
                      "disabled": true
                    },
                    {
                      "key": "unselectable",
                      "value": "\u003cboolean\u003e",
                      "description": "root category is unselectable (Boolean).",
                      "disabled": true
                    },
                    {
                      "key": "source_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "List of source id.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a new team. In case of success it renders the created tag, otherwise, it renders an error (422 HTTP code).\n\nNote: The fields ​`mandatory`,​ ​`multiple`,​ ​`post_qualification​`, `s​ource_ids​` and `u​nselectable​` are accounted for only if the Category has no parent.\n\nAuthorization​: only users that can manage teams."
              }
            }
          ]
        },
        {
          "name": "CustomFields",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all custom fields",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/custom_fields",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "custom_fields"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders custom fields ordered by position (ascending).\n\nAuthorization​: only users that can see custom fields in administration section."
              }
            },
            {
              "name": "Creating a custom field",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/custom_fields",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "custom_fields"
                  ],
                  "query": [
                    {
                      "key": "associated_type_name",
                      "value": "\u003cstring\u003e",
                      "description": "The associated type of custom field. It can be IdentityGroup or Intervention.",
                      "disabled": true
                    },
                    {
                      "key": "label",
                      "value": "\u003cstring\u003e",
                      "description": "The label of the custom field.",
                      "disabled": true
                    },
                    {
                      "key": "key",
                      "value": "\u003cstring\u003e",
                      "description": "The key of the custom field (example: customer_id). This is used to determine how it is stored on identity groups.",
                      "disabled": true
                    },
                    {
                      "key": "type",
                      "value": "\u003cstring\u003e",
                      "description": "The type of the custom field. It can be string, boolean, text, integer, float, single_choice,",
                      "disabled": true
                    },
                    {
                      "key": "choices[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "A list of choices to be for single_choice, or multiple_choice types. This must be given",
                      "disabled": true
                    },
                    {
                      "key": "multiple",
                      "value": "\u003cboolean\u003e",
                      "description": "true or false, this as no effect on single_choice, multiple_choice or boolean types",
                      "disabled": true
                    },
                    {
                      "key": "position",
                      "value": "\u003cinteger\u003e",
                      "description": "an integer that indicates custom field’s position between others (default: -1).",
                      "disabled": true
                    },
                    {
                      "key": "read_only",
                      "value": "\u003cboolean\u003e",
                      "description": "true or false, that indicates if the custom field is in read-only (default: false).",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a custom field. In case of success it renders the custom field, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that can create custom fields."
              }
            },
            {
              "name": "Deleting a custom field",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/custom_fields/:customFieldId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "custom_fields",
                    ":customFieldId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing custom field. It renders custom field itself. It renders a 404 if id is invalid.\n\nAuthorization​: only users that are able to destroy custom fields.."
              }
            },
            {
              "name": "Getting a custom field from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/custom_fields/:customFieldId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "custom_fields",
                    ":customFieldId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a custom field from given id.\n\nAuthorization​: only users that can see custom fields in administration section."
              }
            },
            {
              "name": "Updating a custom field",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/custom_fields/:customFieldId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "custom_fields",
                    ":customFieldId"
                  ],
                  "query": [
                    {
                      "key": "label",
                      "value": "\u003cstring\u003e",
                      "description": "Custom field’s label.",
                      "disabled": true
                    },
                    {
                      "key": "choices[]",
                      "value": "\u003carray.string.csv\u003e",
                      "disabled": true
                    },
                    {
                      "key": "position",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "Custom field’s position.",
                      "disabled": true
                    },
                    {
                      "key": "read_only",
                      "value": "\u003cboolean\u003e",
                      "description": "true or false, that indicates if the custom field is in read-only (default: false).",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing custom field from given attributes and renders it in case of success.\n\nAuthorization​: only users that are able to update custom fields."
              }
            }
          ]
        },
        {
          "name": "Locales",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all user interface locales",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/interface_locales",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "interface_locales"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders all available locales for user interface."
              }
            },
            {
              "name": "Getting all content locales",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/locales",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "locales"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders all available locales for contents."
              }
            }
          ]
        },
        {
          "name": "Reply Assistant Entries",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting​ a​ll​ reply assistant e​ntries",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/entries",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "entries"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders all entries ordered by creation date (ascending).\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            },
            {
              "name": "Creating an entry",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/entries",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "entries"
                  ],
                  "query": [
                    {
                      "key": "label",
                      "value": "\u003cstring\u003e",
                      "description": "The name of the entry.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a reply assistant entry. In case of success it renders the entry, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            },
            {
              "name": "Deleting a reply assistant entry",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/entries/:replyAssistantEntryId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "entries",
                    ":replyAssistantEntryId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing entry. It renders the entry itself. It renders a 404 if id is invalid.\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            },
            {
              "name": "Getting a reply assistant entry from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/entries/:replyAssistantEntryId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "entries",
                    ":replyAssistantEntryId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders an entry from given id.\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            },
            {
              "name": "Updating a reply assistant entry",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/entries/:replyAssistantEntryId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "entries",
                    ":replyAssistantEntryId"
                  ],
                  "query": [
                    {
                      "key": "label",
                      "value": "\u003cstring\u003e",
                      "description": "The name of the entry.",
                      "disabled": true
                    },
                    {
                      "key": "foreign_id",
                      "value": "\u003cstring\u003e",
                      "description": "The internal/company id of the entry. This is used to match Engage Digital entry’s id with the company one. Example: KB042.",
                      "disabled": true
                    },
                    {
                      "key": "category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "To restrict the entry to a set of Engage Digital categories. Then, KB entries that do not match message’s categories to which you are replying will not be suggested.",
                      "disabled": true
                    },
                    {
                      "key": "shortcuts[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "entry shortcuts",
                      "disabled": true
                    },
                    {
                      "key": "entry_group_id",
                      "value": "\u003cstring\u003e",
                      "description": "Entry group id.",
                      "disabled": true
                    },
                    {
                      "key": "source_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Source ids (array)",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing entry from given attributes and renders it in case of success.\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            }
          ]
        },
        {
          "name": "Reply Assistant Groups",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting​ a​ll​ reply assistant groups",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/groups",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "groups"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders all groups ordered by creation date (ascending).\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            },
            {
              "name": "Creating a reply assistant group",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/groups",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "groups"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "The name of the group.",
                      "disabled": true
                    },
                    {
                      "key": "entry_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "List of the reply assistant entries in this group.",
                      "disabled": true
                    },
                    {
                      "key": "autocomplete",
                      "value": "\u003cboolean\u003e",
                      "description": "Used for autocompletion in chat.",
                      "disabled": true
                    },
                    {
                      "key": "position",
                      "value": "\u003cinteger\u003e",
                      "description": "Used to determine the order of the groups in the interface, in ascending order.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates an entry group. In case of success it renders the group, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            },
            {
              "name": "Deleting a reply assistant group",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/groups/:replyAssistantGroupId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "groups",
                    ":replyAssistantGroupId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing group. It renders the group itself. It renders a 404 if id is invalid.\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            },
            {
              "name": "Getting a reply assistant group from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/groups/:replyAssistantGroupId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "groups",
                    ":replyAssistantGroupId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders an entry group from given id.\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            },
            {
              "name": "Updating a reply assistant group",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/groups/:replyAssistantGroupId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "groups",
                    ":replyAssistantGroupId"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "The name of the group.",
                      "disabled": true
                    },
                    {
                      "key": "entry_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "List of the reply assistant entries in this group.",
                      "disabled": true
                    },
                    {
                      "key": "autocomplete",
                      "value": "\u003cboolean\u003e",
                      "description": "Used for autocompletion in chat.",
                      "disabled": true
                    },
                    {
                      "key": "position",
                      "value": "\u003cinteger\u003e",
                      "description": "Used to determine the order of the groups in the interface, in ascending order.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing group from given attributes and renders it in case of success.\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            }
          ]
        },
        {
          "name": "Reply Assistant Versions",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting​ a​ll​ reply assistant versions",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/versions",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "versions"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders all reply assistant versions ordered by creation date (ascending).\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            },
            {
              "name": "Creating a reply assistant version",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/versions",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "versions"
                  ],
                  "query": [
                    {
                      "key": "body",
                      "value": "\u003cstring\u003e",
                      "description": "Body of the version",
                      "disabled": true
                    },
                    {
                      "key": "entry_id",
                      "value": "\u003cstring\u003e",
                      "description": "Reply assistant entry id (mandatory)",
                      "disabled": true
                    },
                    {
                      "key": "source_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Source ids (array)",
                      "disabled": true
                    },
                    {
                      "key": "format",
                      "value": "\u003cstring\u003e",
                      "description": "Either “text” or “html”",
                      "disabled": true
                    },
                    {
                      "key": "language",
                      "value": "\u003cstring\u003e",
                      "description": "Language (ex: “fr”)",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a reply assistant version. In case of success it renders the version, otherwise, it renders an error (422 HTTP code, 404 if the entry_id is invalid).\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            },
            {
              "name": "Deleting a reply assistant version",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/versions/:replyAssistantVersionId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "versions",
                    ":replyAssistantVersionId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing version. It renders the version itself. It renders a 404 if id is invalid.\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            },
            {
              "name": "Getting a reply assistant version from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/versions/:replyAssistantVersionId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "versions",
                    ":replyAssistantVersionId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a version from given id.\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            },
            {
              "name": "Updating a reply assistant version",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/reply_assistant/versions/:replyAssistantVersionId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "reply_assistant",
                    "versions",
                    ":replyAssistantVersionId"
                  ],
                  "query": [
                    {
                      "key": "body",
                      "value": "\u003cstring\u003e",
                      "description": "Body of the version",
                      "disabled": true
                    },
                    {
                      "key": "entry_id",
                      "value": "\u003cstring\u003e",
                      "description": "Reply assistant entry id.",
                      "disabled": true
                    },
                    {
                      "key": "source_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Source ids (array)",
                      "disabled": true
                    },
                    {
                      "key": "format",
                      "value": "\u003cstring\u003e",
                      "description": "Either “text” or “html”",
                      "disabled": true
                    },
                    {
                      "key": "language",
                      "value": "\u003cstring\u003e",
                      "description": "Language (ex: “fr”)",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing version from given attributes and renders it in case of success.\n\nAuthorization​: only users that have the right to manage reply assistant."
              }
            }
          ]
        },
        {
          "name": "Roles",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all roles",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/roles",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "roles"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders roles ordered by creation date (ascending)."
              }
            },
            {
              "name": "Creating a role",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/roles",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "roles"
                  ],
                  "query": [
                    {
                      "key": "label",
                      "value": "\u003cstring\u003e",
                      "disabled": true
                    },
                    {
                      "key": "access_help_center",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "access_previous_messages",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "access_pull_mode",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "admin_stamp_answer",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "approve_content",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "ask_an_expert",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding configuration",
                      "disabled": true
                    },
                    {
                      "key": "assign_intervention",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "author_block_content",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "close_content_thread",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "create_and_destroy_extension",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "create_community",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "create_content_source",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "create_user",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "delay_export_content",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "delete_content_thread",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "escalate_to_video",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding configuration",
                      "disabled": true
                    },
                    {
                      "key": "impersonate_user",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "invite_user",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_api_access_tokens",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_app_sdk_applications",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_automatic_exports_tasks",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding extension enabled",
                      "disabled": true
                    },
                    {
                      "key": "manage_categories",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_chat",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_custom_fields",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_custom_notifications",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_emails_templates",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_folders",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_ice",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_identities",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_own_notifications",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_reply_assistant",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding extension enabled",
                      "disabled": true
                    },
                    {
                      "key": "manage_roles",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_rules_engine_rules",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding extension enabled",
                      "disabled": true
                    },
                    {
                      "key": "manage_surveys",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding extension enabled",
                      "disabled": true
                    },
                    {
                      "key": "manage_tags",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_teams",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_topologies",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_users_of_my_teams",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "monitor_tasks",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "monitor_team_tasks",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "mute_content",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "open_content_thread",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "publish_content",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_community",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_content_source",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_event",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_export",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_identity",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_own_stats",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_presence",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_stats",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_surveys",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding extension enabled",
                      "disabled": true
                    },
                    {
                      "key": "read_user",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "receive_tasks",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "reply_with_assistant",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding extension enabled",
                      "disabled": true
                    },
                    {
                      "key": "search_contents",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "search_event",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_community",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_content_source",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_extension",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_identity",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_intervention",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_own_intervention",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_settings",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_time_sheet",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_user",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "use_emoji",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a new role. In case of success it renders the created role, otherwise, it renders an error (422 HTTP code)."
              }
            },
            {
              "name": "Getting a role from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/roles/:roleId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "roles",
                    ":roleId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a role from given id.\n\nAuthorization​: only users that can manage roles."
              }
            },
            {
              "name": "Updating a role",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/roles/:roleId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "roles",
                    ":roleId"
                  ],
                  "query": [
                    {
                      "key": "access_help_center",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "access_previous_messages",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "access_pull_mode",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "admin_stamp_answer",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "approve_content",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "ask_an_expert",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding configuration",
                      "disabled": true
                    },
                    {
                      "key": "assign_intervention",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "author_block_content",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "close_content_thread",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "create_and_destroy_extension",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "create_community",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "create_content_source",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "create_user",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "delay_export_content",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "delete_content_thread",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "escalate_to_video",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding configuration",
                      "disabled": true
                    },
                    {
                      "key": "impersonate_user",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "invite_user",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_api_access_tokens",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_app_sdk_applications",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_automatic_exports_tasks",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding extension enabled",
                      "disabled": true
                    },
                    {
                      "key": "manage_categories",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_chat",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_custom_fields",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_custom_notifications",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_emails_templates",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_folders",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_ice",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_identities",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_own_notifications",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_reply_assistant",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding extension enabled",
                      "disabled": true
                    },
                    {
                      "key": "manage_roles",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_rules_engine_rules",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding extension enabled",
                      "disabled": true
                    },
                    {
                      "key": "manage_surveys",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding extension enabled",
                      "disabled": true
                    },
                    {
                      "key": "manage_tags",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_teams",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_topologies",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "manage_users_of_my_teams",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "monitor_tasks",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "monitor_team_tasks",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "mute_content",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "open_content_thread",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "publish_content",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_community",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_content_source",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_event",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_export",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_identity",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_own_stats",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_presence",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_stats",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "read_surveys",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding extension enabled",
                      "disabled": true
                    },
                    {
                      "key": "read_user",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "receive_tasks",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "reply_with_assistant",
                      "value": "\u003cboolean\u003e",
                      "description": "permission only available with the corresponding extension enabled",
                      "disabled": true
                    },
                    {
                      "key": "search_contents",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "search_event",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_community",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_content_source",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_extension",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_identity",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_intervention",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_own_intervention",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_settings",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_time_sheet",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "update_user",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    },
                    {
                      "key": "use_emoji",
                      "value": "\u003cboolean\u003e",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing role from given attributes and renders it in case of success.\n\nAuthorization​: A user can’t update roles with more permissions than himself and can’t give a role a permission he doesn’t have.\n\nAny permission updated with a user that does not have this permission will be ignored (The update is done, just not the unallowed permission)"
              }
            }
          ]
        },
        {
          "name": "Settings",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all settings",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/settings",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "settings"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders all settings of your domain."
              }
            },
            {
              "name": "Updating settings",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/settings",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "settings"
                  ],
                  "query": [
                    {
                      "key": "activity_presence_threshold",
                      "value": "\u003cinteger\u003e",
                      "description": "(in hours).",
                      "disabled": true
                    },
                    {
                      "key": "activity_tracking",
                      "value": "\u003cboolean\u003e",
                      "description": "​Enable activity tracking (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "beginning_of_week",
                      "value": "\u003cstring\u003e",
                      "description": "(Day of week)",
                      "disabled": true
                    },
                    {
                      "key": "category_tagging",
                      "value": "\u003cboolean\u003e",
                      "description": "A​ ctivate the forced categorization by source.​ (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "content_languages",
                      "value": "\u003cstring\u003e",
                      "description": "(See format)",
                      "disabled": true
                    },
                    {
                      "key": "dashboard",
                      "value": "\u003cboolean\u003e",
                      "description": "Activate the dashboard (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "deny_iframe_integration",
                      "value": "\u003cboolean\u003e",
                      "description": "Prevent the DD to be embed by other websites (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "disable_password_autocomplete",
                      "value": "\u003cboolean\u003e",
                      "description": "(Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "expire_password_after",
                      "value": "\u003cinteger\u003e",
                      "description": "password expiration delay (in seconds)",
                      "disabled": true
                    },
                    {
                      "key": "enable_auto_scroll_down",
                      "value": "\u003cboolean\u003e",
                      "description": "enable auto scroll down (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "expire_password_enabled",
                      "value": "\u003cboolean\u003e",
                      "description": "enable password expiration (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "export_in_seconds",
                      "value": "\u003cboolean\u003e",
                      "description": "provide durations in seconds in export (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "fold_useless_contents",
                      "value": "\u003cboolean\u003e",
                      "description": "fold archived contents (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "fte_duration",
                      "value": "\u003cinteger\u003e",
                      "description": "FTE data period (in hours)",
                      "disabled": true
                    },
                    {
                      "key": "identity_merge",
                      "value": "\u003cboolean\u003e",
                      "description": "enable identity merge (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "intervention_defer_rates[]",
                      "value": "\u003carray.integer\u003e",
                      "description": "(Array of times in seconds)",
                      "disabled": true
                    },
                    {
                      "key": "intervention_defer_threshold",
                      "value": "\u003cinteger\u003e",
                      "description": "(in seconds)",
                      "disabled": true
                    },
                    {
                      "key": "intervention_rates[]",
                      "value": "\u003carray.integer\u003e",
                      "description": "(Array of times in seconds)",
                      "disabled": true
                    },
                    {
                      "key": "locale",
                      "value": "\u003cstring\u003e",
                      "description": "locale code (String)",
                      "disabled": true
                    },
                    {
                      "key": "multi_lang",
                      "value": "\u003cboolean\u003e",
                      "description": "activate multi language support for messages (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "Name of the Dimelo Digital (String)",
                      "disabled": true
                    },
                    {
                      "key": "password_archivable_enabled",
                      "value": "\u003cboolean\u003e",
                      "description": "prohibit reusing old passwords (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "password_archivable_size",
                      "value": "\u003cinteger\u003e",
                      "description": "number of archived passwords",
                      "disabled": true
                    },
                    {
                      "key": "password_min_length",
                      "value": "\u003cinteger\u003e",
                      "description": "minimum character length",
                      "disabled": true
                    },
                    {
                      "key": "password_non_word",
                      "value": "\u003cboolean\u003e",
                      "description": "should contain at least 1 non alphanumeric char (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "password_numbers",
                      "value": "\u003cboolean\u003e",
                      "description": "should contain at least 1 number (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "password_recovery_disabled",
                      "value": "\u003cboolean\u003e",
                      "description": "disable password recovery by email (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "push_enabled",
                      "value": "\u003cboolean\u003e",
                      "description": "Enable push mode (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "reply_as_any_identity",
                      "value": "\u003cboolean\u003e",
                      "description": "Enable reply as any identity (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "rtl_support",
                      "value": "\u003cboolean\u003e",
                      "description": "Enable right to left support (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "self_approval_required",
                      "value": "\u003cboolean\u003e",
                      "description": "​Allow authors to ask approval of their messages (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "session_timeout",
                      "value": "\u003cinteger\u003e",
                      "description": "Session timeout (in minutes)",
                      "disabled": true
                    },
                    {
                      "key": "spellchecking",
                      "value": "\u003cboolean\u003e",
                      "description": "Enable spellchecking (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "style",
                      "value": "\u003cstring\u003e",
                      "description": "Defines the DD’s design (String)",
                      "disabled": true
                    },
                    {
                      "key": "third_party_services_disabled",
                      "value": "\u003cboolean\u003e",
                      "description": "Disable third-party services (tracking...) (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "timezone",
                      "value": "\u003cstring\u003e",
                      "description": "Use the timezone endpoint to get the timezone name (String)",
                      "disabled": true
                    },
                    {
                      "key": "track_js",
                      "value": "\u003cboolean\u003e",
                      "description": "Track JS errors (Boolean)",
                      "disabled": true
                    },
                    {
                      "key": "type",
                      "value": "\u003cstring\u003e",
                      "description": "Can be ‘demo’, ‘production’ or ‘archived’",
                      "disabled": true
                    },
                    {
                      "key": "urgent_task_threshold",
                      "value": "\u003cinteger\u003e",
                      "description": "Chat max response time (in seconds)",
                      "disabled": true
                    },
                    {
                      "key": "use_system_font",
                      "value": "\u003cboolean\u003e",
                      "description": "Experimental (Boolean)",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates the current domain settings.\n\nAuthorization​: only users that can update settings."
              }
            }
          ]
        },
        {
          "name": "Tags",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all tags",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/tags",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "tags"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders tags ordered by name (ascending)."
              }
            },
            {
              "name": "Creating a tag",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/tags",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "tags"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "Tag name (mandatory).",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a new tag. In case of success it renders the created tag, otherwise, it renders an error (422 HTTP code)."
              }
            },
            {
              "name": "Deleting a tag",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/tags/:tagId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "tags",
                    ":tagId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing tag. It renders tag itself. It renders a 404 if id is invalid.\n\nAuthorization​: only users that are able to destroy tags."
              }
            },
            {
              "name": "Getting a tag from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/tags/:tagId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "tags",
                    ":tagId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a tag from given id."
              }
            },
            {
              "name": "Updating a tag",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/tags/:tagId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "tags",
                    ":tagId"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "Tag’s label.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing tag from given attributes and renders it in case of success.\n\nAuthorization​: only users that are able to update tags."
              }
            }
          ]
        },
        {
          "name": "Teams",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all teams",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/teams",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "teams"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders teams ordered by creation date (ascending)."
              }
            },
            {
              "name": "Creating a team",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/teams",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "teams"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "Team name.",
                      "disabled": true
                    },
                    {
                      "key": "leader_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "List of user id as leaders",
                      "disabled": true
                    },
                    {
                      "key": "user_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "List of user id as team members.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a new team. In case of success it renders the created tag, otherwise, it renders an error (422 HTTP code)."
              }
            },
            {
              "name": "Deleting a team",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/teams/:teamId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "teams",
                    ":teamId"
                  ],
                  "query": [
                    {
                      "key": "take_over_category_id",
                      "value": "\u003cstring\u003e",
                      "description": "ID of a category to recategorize (optional).",
                      "disabled": true
                    }
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing team. It renders the team itself. It renders a 404 if id is invalid."
              }
            },
            {
              "name": "Getting a team from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/teams/:teamId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "teams",
                    ":teamId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a team from given id."
              }
            },
            {
              "name": "Updating a team",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/teams/:teamId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "teams",
                    ":teamId"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "Team name.",
                      "disabled": true
                    },
                    {
                      "key": "leader_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "List of user id as leaders",
                      "disabled": true
                    },
                    {
                      "key": "user_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "List of user id as team members.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing team from given attributes and renders it in case of success."
              }
            }
          ]
        },
        {
          "name": "Time Sheets",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all time sheets",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/time_sheets",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "time_sheets"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders time sheets ordered by active and label."
              }
            },
            {
              "name": "Creating a time sheet",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/time_sheets",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "time_sheets"
                  ],
                  "query": [
                    {
                      "key": "active",
                      "value": "\u003cboolean\u003e",
                      "description": "true or false, this field is used to enable/disable a time sheet.",
                      "disabled": true
                    },
                    {
                      "key": "label",
                      "value": "\u003cstring\u003e",
                      "description": "The label of the time sheet.",
                      "disabled": true
                    },
                    {
                      "key": "source_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "An array containing id of each source using your time sheet.",
                      "disabled": true
                    },
                    {
                      "key": "holidays_region",
                      "value": "\u003cstring\u003e",
                      "description": "A string containing the first two letters of your country (example: \"fr\"/\"en\"/\"es\"), useful to bootstrap default holidays following to a country.",
                      "disabled": true
                    },
                    {
                      "key": "holidays",
                      "value": "\u003cstring\u003e",
                      "description": "An array containing one or more hash of holidays, a holiday must contain a name (string) and a date (string), the date must be in a valid format, a valid format is a format corresponding to your domain’s locale).",
                      "disabled": true
                    },
                    {
                      "key": "monday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. For example: “a-b,c-d”: “a” is the beginning of the first interval of the day, “b” is the ending of the first interval of the day, “c” is the beginning of the second interval of the day, “d” is the ending of the second interval of the day",
                      "disabled": true
                    },
                    {
                      "key": "tuesday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                      "disabled": true
                    },
                    {
                      "key": "wednesday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                      "disabled": true
                    },
                    {
                      "key": "thursday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                      "disabled": true
                    },
                    {
                      "key": "friday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                      "disabled": true
                    },
                    {
                      "key": "saturday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                      "disabled": true
                    },
                    {
                      "key": "sunday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a time sheet. In case of success it renders the time sheet, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that can create time sheet."
              }
            },
            {
              "name": "Deleting a time sheet",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/time_sheets/:timeSheetId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "time_sheets",
                    ":timeSheetId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing time sheet. It renders time sheet itself. It renders a 404 if id is invalid."
              }
            },
            {
              "name": "Getting a time sheet from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/time_sheets/:timeSheetId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "time_sheets",
                    ":timeSheetId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a time sheet from given id.\n\nAuthorization​: only users that can see time sheets in administration section."
              }
            },
            {
              "name": "Updating a time sheet",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/time_sheets/:timeSheetId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "time_sheets",
                    ":timeSheetId"
                  ],
                  "query": [
                    {
                      "key": "active",
                      "value": "\u003cboolean\u003e",
                      "description": "true or false, this field is used to enable/disable a time sheet.",
                      "disabled": true
                    },
                    {
                      "key": "label",
                      "value": "\u003cstring\u003e",
                      "description": "The label of the time sheet.",
                      "disabled": true
                    },
                    {
                      "key": "source_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "An array containing id of each source using your time sheet.",
                      "disabled": true
                    },
                    {
                      "key": "holidays",
                      "value": "\u003cstring\u003e",
                      "description": "An array containing one or more hash of holidays, a holiday must contain a name (string) and a date (string), the date must be in a valid format, a valid format is a format corresponding to your domain’s locale).",
                      "disabled": true
                    },
                    {
                      "key": "monday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. For example: “a-b,c-d”: “a” is the beginning of the first interval of the day, “b” is the ending of the first interval of the day, “c” is the beginning of the second interval of the day, “d” is the ending of the second interval of the day",
                      "disabled": true
                    },
                    {
                      "key": "tuesday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                      "disabled": true
                    },
                    {
                      "key": "wednesday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                      "disabled": true
                    },
                    {
                      "key": "thursday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                      "disabled": true
                    },
                    {
                      "key": "friday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                      "disabled": true
                    },
                    {
                      "key": "saturday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                      "disabled": true
                    },
                    {
                      "key": "sunday_hours",
                      "value": "\u003cstring\u003e",
                      "description": "this field define the time intervals of the day (in secs). An empty string means that there are no business hours on this day. See `monday_hours` for the format.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing team from given attributes and renders it in case of success."
              }
            }
          ]
        },
        {
          "name": "Timezones",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all timezones",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/timezones",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "timezones"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders all available timezones."
              }
            }
          ]
        },
        {
          "name": "Users",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all users",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/users",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "users"
                  ],
                  "query": [
                    {
                      "key": "email",
                      "value": "\u003cstring\u003e",
                      "description": "To filter users on given email.",
                      "disabled": true
                    },
                    {
                      "key": "category_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter users on given category id.",
                      "disabled": true
                    },
                    {
                      "key": "identity_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter users on given identity id.",
                      "disabled": true
                    },
                    {
                      "key": "external_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter users on given external id.",
                      "disabled": true
                    },
                    {
                      "key": "role_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter users on given role id.",
                      "disabled": true
                    },
                    {
                      "key": "team_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter users on given team id.",
                      "disabled": true
                    },
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders users ordered by creation date (descending).\n\nAuthorization​: only users that can view users. If the user affiliated to the token has the manage_users_of_my_teams permission, only the users belonging to at least one of the teams he’s the leader of will be returned."
              }
            },
            {
              "name": "Creating a user",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/users",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "users"
                  ],
                  "query": [
                    {
                      "key": "category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "User list of category ids (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "email",
                      "value": "\u003cstring\u003e",
                      "description": "User email (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "enabled",
                      "value": "\u003cboolean\u003e",
                      "description": "Whether the user is enabled or not (boolean).",
                      "disabled": true
                    },
                    {
                      "key": "external_id",
                      "value": "\u003cstring\u003e",
                      "description": "User external id, used for SSO.",
                      "disabled": true
                    },
                    {
                      "key": "firstname",
                      "value": "\u003cstring\u003e",
                      "description": "User firstname (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "gender",
                      "value": "\u003cstring\u003e",
                      "description": "User gender (\"man\" or \"woman\").",
                      "disabled": true
                    },
                    {
                      "key": "identity_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "User list of identity ids (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "lastname",
                      "value": "\u003cstring\u003e",
                      "description": "User lastname (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "locale",
                      "value": "\u003cstring\u003e",
                      "description": "Language for the user interface.",
                      "disabled": true
                    },
                    {
                      "key": "nickname",
                      "value": "\u003cstring\u003e",
                      "description": "User nickname.",
                      "disabled": true
                    },
                    {
                      "key": "password",
                      "value": "\u003cstring\u003e",
                      "description": "User plain password (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "role_id",
                      "value": "\u003cstring\u003e",
                      "description": "User role id (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "team_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "User list of team ids (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "timezone",
                      "value": "\u003cstring\u003e",
                      "description": "Use the timezone endpoint to get the timezone name (String), default is empty for domain timezone.",
                      "disabled": true
                    },
                    {
                      "key": "spoken_languages[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "List of locales corresponding to the languages spoken by the user (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "no_password",
                      "value": "\u003cboolean\u003e",
                      "description": "Whether the user is passwordless or not (boolean). Must be used with the corresponding SSO configuration.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a new user. In case of success it renders the created user, otherwise, it renders an error (422 HTTP code)."
              }
            },
            {
              "name": "Inviting a user",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/users/invite",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "users",
                    "invite"
                  ],
                  "query": [
                    {
                      "key": "category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "User list of category ids (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "email",
                      "value": "\u003cstring\u003e",
                      "description": "User email (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "enabled",
                      "value": "\u003cboolean\u003e",
                      "description": "Whether the user is enabled or not (boolean).",
                      "disabled": true
                    },
                    {
                      "key": "external_id",
                      "value": "\u003cstring\u003e",
                      "description": "User external id.",
                      "disabled": true
                    },
                    {
                      "key": "firstname",
                      "value": "\u003cstring\u003e",
                      "description": "User firstname (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "gender",
                      "value": "\u003cstring\u003e",
                      "description": "User gender (\"man\" or \"woman\").",
                      "disabled": true
                    },
                    {
                      "key": "identity_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "User list of identity ids (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "lastname",
                      "value": "\u003cstring\u003e",
                      "description": "User lastname (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "locale",
                      "value": "\u003cstring\u003e",
                      "description": "Language for the user interface.",
                      "disabled": true
                    },
                    {
                      "key": "nickname",
                      "value": "\u003cstring\u003e",
                      "description": "User nickname.",
                      "disabled": true
                    },
                    {
                      "key": "role_id",
                      "value": "\u003cstring\u003e",
                      "description": "User role id (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "team_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "User list of team ids (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "timezone",
                      "value": "\u003cstring\u003e",
                      "description": "Use the timezone endpoint to get the timezone name (String), default is empty for",
                      "disabled": true
                    },
                    {
                      "key": "spoken_languages[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "List of locales corresponding to the languages spoken by the user (multiple).",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method invites a new user. In case of success it renders the created user, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that can invite other users. If the user affiliated to the token has the manage_users_of_my_teams permission, the invited user will need to belong to at least one of the teams he’s the leader of. It will not be possible to assign the user to other teams."
              }
            },
            {
              "name": "Deleting a user",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/users/:userId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "users",
                    ":userId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method deletes the given user. In case of success it renders the deleted user, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that can update users. The user affiliated to the token must have at least all the permissions of the other user. If the user affiliated to the token has the manage_users_of_my_teams permission, the deleted user will need to belong to at least one of the teams he’s the leader of."
              }
            },
            {
              "name": "Getting a user from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/users/:userId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "users",
                    ":userId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a user from given id."
              }
            },
            {
              "name": "Updating a user",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/users/:userId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "users",
                    ":userId"
                  ],
                  "query": [
                    {
                      "key": "category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "User list of category ids (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "email",
                      "value": "\u003cstring\u003e",
                      "description": "User email.",
                      "disabled": true
                    },
                    {
                      "key": "enabled",
                      "value": "\u003cboolean\u003e",
                      "description": "Whether the user is enabled or not (boolean).",
                      "disabled": true
                    },
                    {
                      "key": "external_id",
                      "value": "\u003cstring\u003e",
                      "description": "User external id, used for SSO.",
                      "disabled": true
                    },
                    {
                      "key": "firstname",
                      "value": "\u003cstring\u003e",
                      "description": "User firstname.",
                      "disabled": true
                    },
                    {
                      "key": "gender",
                      "value": "\u003cstring\u003e",
                      "description": "User gender (\"man\" or \"woman\").",
                      "disabled": true
                    },
                    {
                      "key": "identity_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "User list of identity ids (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "lastname",
                      "value": "\u003cstring\u003e",
                      "description": "User lastname.",
                      "disabled": true
                    },
                    {
                      "key": "locale",
                      "value": "\u003cstring\u003e",
                      "description": "Language for the user interface.",
                      "disabled": true
                    },
                    {
                      "key": "nickname",
                      "value": "\u003cstring\u003e",
                      "description": "User nickname.",
                      "disabled": true
                    },
                    {
                      "key": "password",
                      "value": "\u003cstring\u003e",
                      "description": "User plain password.",
                      "disabled": true
                    },
                    {
                      "key": "role_id",
                      "value": "\u003cstring\u003e",
                      "description": "User role id.",
                      "disabled": true
                    },
                    {
                      "key": "team_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "User list of team ids (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "timezone",
                      "value": "\u003cstring\u003e",
                      "description": "Use the timezone endpoint to get the timezone name (String), default is empty for domain timezone.",
                      "disabled": true
                    },
                    {
                      "key": "spoken_languages[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "List of locales corresponding to the languages spoken by the user (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "no_password",
                      "value": "\u003cboolean\u003e",
                      "description": "Whether the user is passwordless or not (boolean). Must be used with the corresponding SSO configuration.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates users from given attributes and renders it in case of success.\n\nAuthorization​: only users that can update users. If the user affiliated to the token has the `manage_users_of_my_teams` permission, the updated user will need to belong to at least one of the teams he’s the leader of. The teams the user affiliated to the token is the leader of will be the only ones which can be added or removed."
              }
            }
          ]
        },
        {
          "name": "User Capacities",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all User Capacities",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/user_capacities",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "user_capacities"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders all user capacities ordered by creation date (ascending).\n\nAuthorization​: only users who can manage topology."
              }
            },
            {
              "name": "Creating a user capacity",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/user_capacities",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "user_capacities"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "User Capacity name.",
                      "disabled": true
                    },
                    {
                      "key": "channels[][channel_id]",
                      "value": "\u003cstring\u003e",
                      "description": "The id of the channel on which the capacities apply.",
                      "disabled": true
                    },
                    {
                      "key": "channels[][default_capacity]",
                      "value": "\u003cinteger\u003e",
                      "description": "The default capacity to apply to the related channel.",
                      "disabled": true
                    },
                    {
                      "key": "channels[][max_capacity]",
                      "value": "\u003cinteger\u003e",
                      "description": "The maximum capacity to apply to the related channel.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a new user capacity. In case of success it renders the created record, otherwise, it renders an error (422 HTTP code).\n\nPlease note that the order of the parameters is important, as the `default_capacity` and `max_capacity` will apply to the immediately above `channel_id`.\n\nAuthorization​: only users who can manage topology."
              }
            },
            {
              "name": "Deleting a user capacity",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/user_capacities/:userCapacityId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "user_capacities",
                    ":userCapacityId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing user capacity. It renders the user capacity itself. It renders a 404 if id is invalid or already destroyed.\n\nAuthorization​: only users who can manage topology."
              }
            },
            {
              "name": "Getting a user capacity from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/user_capacities/:userCapacityId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "user_capacities",
                    ":userCapacityId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders the user capacity corresponding to the id given in parameter. It renders a 404 if id is invalid.\n\nAuthorization​: only users who can manage topology."
              }
            },
            {
              "name": "Updating a user capacity",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/user_capacities/:userCapacityId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "user_capacities",
                    ":userCapacityId"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "User Capacity name.",
                      "disabled": true
                    },
                    {
                      "key": "channels[][channel_id]",
                      "value": "\u003cstring\u003e",
                      "description": "The id of the channel on which the capacities apply.",
                      "disabled": true
                    },
                    {
                      "key": "channels[][default_capacity]",
                      "value": "\u003cinteger\u003e",
                      "description": "The default capacity to apply to the related channel.",
                      "disabled": true
                    },
                    {
                      "key": "channels[][max_capacity]",
                      "value": "\u003cinteger\u003e",
                      "description": "The maximum capacity to apply to the related channel.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a new user capacity. In case of success it renders the created record, otherwise, it renders an error (422 HTTP code).\n\nPlease note that the order of the parameters is important, as the `default_capacity` and `max_capacity` will apply to the immediately above `channel_id`.\n\nAuthorization​: only users who can manage topology."
              }
            }
          ]
        },
        {
          "name": "User Signatures",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all user's signatures",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/users/:userId/signatures",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "users",
                    ":userId",
                    "signatures"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders user’s signatures ordered by creation date (descending).\n\nAuthorization​: only users that can view users. If the user affiliated to the token has the manage_users_of_my_teams permission, only the signatures of the users belonging to at least one of the teams he’s the leader of will be available."
              }
            },
            {
              "name": "Creating a user's signature",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/users/:userId/signatures",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "users",
                    ":userId",
                    "signatures"
                  ],
                  "query": [
                    {
                      "key": "body",
                      "value": "\u003cstring\u003e",
                      "description": "The signature text (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "source_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "The signature list of source ids (multiple). Keep it empty if you don’t need to associate the signature with any sources.",
                      "disabled": true
                    },
                    {
                      "key": "language",
                      "value": "\u003cstring\u003e",
                      "description": "The two-letter code of the signature language.",
                      "disabled": true
                    },
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "The signature name.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a new user’s signature. In case of success it renders the created signature, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that can update users. If the user affiliated to the token has the manage_users_of_my_teams permission, the owner of the deleting signature will need to belong to at least one of the teams he’s the leader of."
              }
            },
            {
              "name": "Deleting a user's signature",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/users/:userId/signatures/:signatureId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "users",
                    ":userId",
                    "signatures",
                    ":signatureId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method deletes the given signature. In case of success it renders the deleted signature, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that can update users. If the user affiliated to the token has the manage_users_of_my_teams permission, the owner of the deleting signature will need to belong to at least one of the teams he’s the leader of."
              }
            },
            {
              "name": "Getting a user's signature from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/users/:userId/signatures/:signatureId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "users",
                    ":userId",
                    "signatures",
                    ":signatureId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a user’s signature from a given id."
              }
            },
            {
              "name": "Updating a user's signature",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/users/:userId/signatures/:signatureId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "users",
                    ":userId",
                    "signatures",
                    ":signatureId"
                  ],
                  "query": [
                    {
                      "key": "body",
                      "value": "\u003cstring\u003e",
                      "description": "The signature text (not empty).",
                      "disabled": true
                    },
                    {
                      "key": "source_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "The signature list of source ids (multiple). Keep it empty if you don’t need to associate the signature with any sources.",
                      "disabled": true
                    },
                    {
                      "key": "language",
                      "value": "\u003cstring\u003e",
                      "description": "The two-letter code of the signature language.",
                      "disabled": true
                    },
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "The signature name.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates the user’s signature related to the provided id from given attributes. In case of success it renders the updated signature, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that can update users. If the user affiliated to the token has the `manage_users_of_my_teams` permission, the updated user will need to belong to at least one of the teams he’s the leader of. The teams the user affiliated to the token is the leader of will be the only ones which can be added or removed."
              }
            }
          ]
        }
      ]
    },
    {
      "name": "Routing",
      "item": [
        {
          "name": "Agent Status",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Get all connected agents status",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/status",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "status"
                  ],
                  "query": [
                    {
                      "key": "source_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "To filter users on given source ids (based on reply permission).",
                      "disabled": true
                    },
                    {
                      "key": "category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "To filter users on given category ids.",
                      "disabled": true
                    },
                    {
                      "key": "team_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "To filter users on given team ids.",
                      "disabled": true
                    },
                    {
                      "key": "spoken_languages[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "To filter users on given locales.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method get all currently connected agents \u0026 their status.\n\nAuthorization​: only users that have the right to monitor the task view."
              }
            },
            {
              "name": "Get a connected agent status",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/status/:agentId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "status",
                    ":agentId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method get the status of a connected agent. Returns a 404 if the user does not exist (not_found) or if he’s not connected (disconnected).\n\nAuthorization​: only users that have the right to monitor the task view or own agent status."
              }
            },
            {
              "name": "Changing an agent's status",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/status/:agentId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "status",
                    ":agentId"
                  ],
                  "query": [
                    {
                      "key": "status",
                      "value": "\u003cstring\u003e",
                      "description": "A hash of channel_id =\u003e availability (must contain all channels).",
                      "disabled": true
                    },
                    {
                      "key": "custom_status_id",
                      "value": "\u003cstring\u003e",
                      "description": "id of presence status (optional)",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an agent's availability. Can be used to set either channels statuses OR custom  status. If both parameters are provided, ignores custom status.The status parameter​ **MUST** b​e either “away” or “available”.\n\nAuthorization​: only users that have the right to monitor the task view or own agent status."
              }
            }
          ]
        },
        {
          "name": "Channels",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all channels",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/channels",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "channels"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders all channels ordered by date of creation."
              }
            },
            {
              "name": "Getting a channel from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/channels/:channelId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "channels",
                    ":channelId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a channel from given id."
              }
            },
            {
              "name": "Updating a channel",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/channels/:channelId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "channels",
                    ":channelId"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "The name of the channel.",
                      "disabled": true
                    },
                    {
                      "key": "source_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "An array containing id of each source assigned to a channel (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "soft_capability",
                      "value": "\u003cinteger\u003e",
                      "description": "Number of tasks that can be assigned to agent by the routing before they are considered \"occupied\".",
                      "disabled": true
                    },
                    {
                      "key": "hard_capability",
                      "value": "\u003cinteger\u003e",
                      "description": "M​aximum number of tasks that can be assigned to agents.",
                      "disabled": true
                    },
                    {
                      "key": "task_timeout_seconds",
                      "value": "\u003cinteger\u003e",
                      "description": "this field defines the time before a task expires (in seconds).",
                      "disabled": true
                    },
                    {
                      "key": "agent_sla",
                      "value": "\u003cinteger\u003e",
                      "description": "Agent SLA in seconds.",
                      "disabled": true
                    },
                    {
                      "key": "agent_sla_threshold",
                      "value": "\u003cinteger\u003e",
                      "description": "Agent SLA warning threshold (must be greater than 0 and less than 100, default value is 0).",
                      "disabled": true
                    },
                    {
                      "key": "task_auto_complete_seconds",
                      "value": "\u003cinteger\u003e",
                      "description": "Time before a task is auto completed (in seconds).",
                      "disabled": true
                    },
                    {
                      "key": "auto_complete_category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "An array containing id of each category set when auto completing a task (multiple).",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing channel from given attributes and renders it in case of success.\n\nAuthorization​: only users that are able to update channels."
              }
            }
          ]
        },
        {
          "name": "Folders",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all folders",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/folders",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "folders"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders folders (shared folders and search folders that belongs to the current user)."
              }
            },
            {
              "name": "Creating a folder",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/folders",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "folders"
                  ],
                  "query": [
                    {
                      "key": "label",
                      "value": "\u003cstring\u003e",
                      "description": "Folder’s label (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "parent_id",
                      "value": "\u003cstring\u003e",
                      "description": "ID of the parent folder.",
                      "disabled": true
                    },
                    {
                      "key": "position",
                      "value": "\u003cinteger\u003e",
                      "description": "position of the folder. ",
                      "disabled": true
                    },
                    {
                      "key": "query",
                      "value": "\u003cstring\u003e",
                      "description": "query of the folder as described in ​Search API documentation.​\\n\\nExample: “​active_and_assigned_to_me:true”",
                      "disabled": true
                    },
                    {
                      "key": "render_threads_count",
                      "value": "\u003cboolean\u003e",
                      "description": "boolean describing display of the number of threads. ",
                      "disabled": true
                    },
                    {
                      "key": "role_restriction[only][]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "list of roles allowed to see this folder. This parameter has to be a hash otherwise it will raise a 400 error. The key should be \"only\". For example: `\u0026role_restriction[only][]=4e5596cdae70f677b5000002`",
                      "disabled": true
                    },
                    {
                      "key": "team_restriction[only][]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "list of teams allowed to see this folder. Same thing as role_restriction: team_restriction parameter has to be a hash with the key \"only\".",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a new folder. In case of success it renders the created folder, otherwise an error (422 HTTP code)."
              }
            },
            {
              "name": "Deleting a folder",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/folders/:folderId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "folders",
                    ":folderId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing folder. It renders the folder itself. It renders a 404 if id is invalid."
              }
            },
            {
              "name": "Getting a folder from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/folders/:folderId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "folders",
                    ":folderId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a folder from given id."
              }
            },
            {
              "name": "Updating a folder",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/folders/:folderId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "folders",
                    ":folderId"
                  ],
                  "query": [
                    {
                      "key": "label",
                      "value": "\u003cstring\u003e",
                      "description": "Folder’s label (mandatory).",
                      "disabled": true
                    },
                    {
                      "key": "parent_id",
                      "value": "\u003cstring\u003e",
                      "description": "ID of the parent folder.",
                      "disabled": true
                    },
                    {
                      "key": "position",
                      "value": "\u003cinteger\u003e",
                      "description": "position of the folder. ",
                      "disabled": true
                    },
                    {
                      "key": "query",
                      "value": "\u003cstring\u003e",
                      "description": "query of the folder as described in ​Search API documentation.​\\n\\nExample: “​active_and_assigned_to_me:true”",
                      "disabled": true
                    },
                    {
                      "key": "render_threads_count",
                      "value": "\u003cboolean\u003e",
                      "description": "boolean describing display of the number of threads. ",
                      "disabled": true
                    },
                    {
                      "key": "role_restriction[only][]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "list of roles allowed to see this folder. This parameter has to be a hash otherwise it will raise a 400 error. The key should be \"only\". For example: `\u0026role_restriction[only][]=4e5596cdae70f677b5000002`",
                      "disabled": true
                    },
                    {
                      "key": "team_restriction[only][]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "list of teams allowed to see this folder. Same thing as role_restriction: team_restriction parameter has to be a hash with the key \"only\".",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing folder from given attributes and renders it in case of success."
              }
            }
          ]
        },
        {
          "name": "Presence Status",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all presence statuses",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/presence_status",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "presence_status"
                  ],
                  "query": [
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders all presence statuses ordered by name (in alphabetical order)."
              }
            },
            {
              "name": "Creating a presence status",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/presence_status",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "presence_status"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "The name of the presence status.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a presence status. In case of success it renders the presence status, otherwise, it renders an error (422 HTTP code).\n\nAuthorization​: only users that have the right to monitor the task view."
              }
            },
            {
              "name": "Deleting a presence status",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/presence_status/:presenceStatusId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "presence_status",
                    ":presenceStatusId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing presence status. It renders presence status itself. It renders a 404 if id is invalid.\n\nAuthorization​: only users that have the right to monitor the task view."
              }
            },
            {
              "name": "Getting a presence status from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/presence_status/:presenceStatusId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "presence_status",
                    ":presenceStatusId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a presence status from given id.\n\nAuthorization​: only users that have the right to monitor the task view."
              }
            },
            {
              "name": "Updating a presence status",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/presence_status/:presenceStatusId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "presence_status",
                    ":presenceStatusId"
                  ],
                  "query": [
                    {
                      "key": "name",
                      "value": "\u003cstring\u003e",
                      "description": "The name of the presence status.",
                      "disabled": true
                    }
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing presence status from given attributes and renders it in case of success.\n\nAuthorization​: only users that have the right to monitor the task view."
              }
            }
          ]
        },
        {
          "name": "Tasks",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all tasks",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/tasks",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "tasks"
                  ],
                  "query": [
                    {
                      "key": "queue",
                      "value": "\u003cstring\u003e",
                      "description": "To filter tasks on given queue name (filters on the “global” queue by default).The most commonly used queues are: “global” (contains every task pending assignation), “workbin_{agent_id}” (contains every tasks assigned to the {agent_id} agent, “history” (contains every processed tasks), and “undelivered” (contains every undelivered tasks). If queue is set to “workbins” all the tasks currently in a workbin will be returned.",
                      "disabled": true
                    },
                    {
                      "key": "channel_id",
                      "value": "\u003cstring\u003e",
                      "description": "To filter tasks on given channel id.",
                      "disabled": true
                    },
                    {
                      "key": "step",
                      "value": "\u003cstring\u003e",
                      "description": "To filter tasks on the step they’re currently in.",
                      "disabled": true
                    },
                    {
                      "key": "offset",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The record index to start. Default value is 0.",
                      "disabled": true
                    },
                    {
                      "key": "limit",
                      "value": "\u003cinteger.int32\u003e",
                      "description": "The max number of records to return. Default value is 30, max value is 150.",
                      "disabled": true
                    }
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders tasks ordered by priority (highest first) and then by creation date (latest first).\n\nAuthorization​: only users that can read tasks."
              }
            },
            {
              "name": "Getting a task from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/tasks/:taskId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "tasks",
                    ":taskId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a task from given id."
              }
            },
            {
              "name": "Complete a task",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/tasks/:taskId/complete",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "tasks",
                    ":taskId",
                    "complete"
                  ],
                  "query": [
                    {
                      "key": "queue",
                      "value": "\u003cstring\u003e",
                      "description": "Name of the queue task has to be moved in.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method completes a task.\n\nAuthorization​: for that call to succeed several conditions are required:\n  - the task must be in an agent’s workbin.\n  - the access token user must either own the task or be able to monitor all tasks or be able to monitor his team’s tasks if the task is owned by one of his team member."
              }
            },
            {
              "name": "Move a task to another queue",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/tasks/:taskId/move",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "tasks",
                    ":taskId",
                    "move"
                  ],
                  "query": [
                    {
                      "key": "queue",
                      "value": "\u003cstring\u003e",
                      "description": "Name of the queue task has to be moved in.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method changes a task queue and renders it in case of success. Only accepts “undelivered” and special queue defined in topology (e.g. triage).\n\nAuthorization​: only users that have the right to monitor the task view."
              }
            },
            {
              "name": "Transferring a task",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/tasks/:taskId/transfer",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "tasks",
                    ":taskId",
                    "transfer"
                  ],
                  "query": [
                    {
                      "key": "agent_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "List of agents to transfer the task to (multiple).",
                      "disabled": true
                    },
                    {
                      "key": "bypass",
                      "value": "\u003cstring\u003e",
                      "description": "Force the transfer to the first agent in agent_ids if set. When bypass is used,",
                      "disabled": true
                    },
                    {
                      "key": "category_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Filter agents receiving the task depending on their categories.",
                      "disabled": true
                    },
                    {
                      "key": "language",
                      "value": "\u003cstring\u003e",
                      "description": "Filter agents receiving the task depending on their spoken languages.",
                      "disabled": true
                    },
                    {
                      "key": "team_ids[]",
                      "value": "\u003carray.string.csv\u003e",
                      "description": "Filter agents receiving the task depending on their teams.",
                      "disabled": true
                    },
                    {
                      "key": "comment",
                      "value": "\u003cstring\u003e",
                      "description": "Add a comment to the task.",
                      "disabled": true
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method transfers an existing task and renders it in case of success.\n\nAuthorization​: only users that have the right to monitor the task view."
              }
            }
          ]
        },
        {
          "name": "Topologies",
          "description": {
            "type": "text/plain"
          },
          "item": [
            {
              "name": "Getting all topologies",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/topologies",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "topologies"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders all topologies ordered by name (in alphabetical order).\n\nAuthorization: Only users that have the right to manage topologies"
              }
            },
            {
              "name": "Creating a topology",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/topologies",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "topologies"
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method creates a topology. In case of success it renders the topology, otherwise, it renders an error (422 HTTP code).\n\nAuthorization: Only users that have the right to manage topologies."
              }
            },
            {
              "name": "Deleting a topology",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/topologies/:topologyId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "topologies",
                    ":topologyId"
                  ]
                },
                "method": "DELETE",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method destroys an existing topology. It renders topology itself. It renders a 404 if id is invalid.\n\nAuthorization: Only users that have the right to manage topologies."
              }
            },
            {
              "name": "Getting a topology from its id",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/topologies/:topologyId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "topologies",
                    ":topologyId"
                  ]
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method renders a topology from given id.\n\nAuthorization: only users that have the right to manage topologies."
              }
            },
            {
              "name": "Updating a topology",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/topologies/:topologyId",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "topologies",
                    ":topologyId"
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method updates an existing topology from given attributes and renders it in case of success.\n\nAuthorization: only users that have the right to manage topologies. Topology must be inactive or the response will return an error."
              }
            },
            {
              "name": "Activating a topology",
              "request": {
                "url": {
                  "raw": "{{ENGAGE_DIGITAL_SERVER_URL}}/1.0/topologies/:topologyId/activate",
                  "host": [
                    "{{ENGAGE_DIGITAL_SERVER_URL}}"
                  ],
                  "path": [
                    "1.0",
                    "topologies",
                    ":topologyId",
                    "activate"
                  ]
                },
                "method": "PUT",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "Bearer {{ENGAGE_DIGITAL_ACCESS_TOKEN}}"
                  },
                  {
                    "key": "Accept",
                    "value": "application/json"
                  }
                ],
                "description": "This method activates an existing topology from given attributes and renders it in case of success.\n\nAuthorization: Only users that have the right to manage topologies."
              }
            }
          ]
        }
      ]
    }
  ]
}